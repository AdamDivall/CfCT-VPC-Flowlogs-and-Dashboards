AWSTemplateFormatVersion: 2010-09-09
Description: ---
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Account Configuration
        Parameters:
          - pLogArchiveAccountId
      - Label:
          default: Data Retention Configuration
        Parameters:
          - pS3LifeCycleTransition
      - Label:
          default: Athena/Glue Configuration
        Parameters:
          - pAthenaQueryResultBucketArn
Parameters:
  pS3LifeCycleTransition:
    Type: String
    Description: Number of Days to retain the logs in Amazon S3 before transitioning the Logs to Amazon S3 Glacier.
  pLogArchiveAccountId:
    Type: String
    Description: "AWS Account Id where FlowLogs Bucket is deployed."
    AllowedPattern: '\d{12}'
  pAthenaQueryResultBucketArn:
    Type: String
    Description: The ARN of the Amazon S3 bucket to which Athena query results are stored. e.g. 'arn:aws:s3:::aws-athena-query-results-us-east-1-XXXXXXXXXXXXXX'
Resources:
  rS3VpcFlowlogsSharedBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub flowlogs-shared-${AWS::Region}-${AWS::AccountId}
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      AccessControl: BucketOwnerFullControl
      OwnershipControls:
        Rules:
          - ObjectOwnership: BucketOwnerEnforced
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: RetentionRule
            Status: Enabled
            Transitions:
                - TransitionInDays: !Ref pS3LifeCycleTransition
                  StorageClass: Glacier
            NoncurrentVersionTransitions:
                - TransitionInDays: !Ref pS3LifeCycleTransition
                  StorageClass: Glacier
  rS3VpcFlowlogsSharedBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref rS3VpcFlowlogsSharedBucket
      PolicyDocument:
        Id: S3BucketPolicy
        Version: "2012-10-17"
        Statement:
          - Sid: "AllowTLS12Only"
            Effect: "Deny"
            Principal: "*"
            Action: "s3:*"
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${rS3VpcFlowlogsSharedBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${rS3VpcFlowlogsSharedBucket}/*"
            Condition:
              NumericLessThan:
                s3:TlsVersion: 1.2
          - Sid: "AllowOnlyHTTPS"
            Effect: "Deny"
            Principal: "*"
            Action: "s3:*"
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${rS3VpcFlowlogsSharedBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${rS3VpcFlowlogsSharedBucket}/*"
            Condition:
              Bool:
                aws:SecureTransport: false
          - Sid: "AllowReplicationWrite"
            Effect: "Allow"
            Principal:
              AWS: !Ref pLogArchiveAccountId
            Action:
              - "s3:ReplicateDelete"
              - "s3:ReplicateObject"
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${rS3VpcFlowlogsSharedBucket}/*"
          - Sid: "AllowReplicationRead"
            Effect: "Allow"
            Principal:
              AWS: !Ref pLogArchiveAccountId
            Action:
              - "s3:List*"
              - "s3:GetBucketVersioning"
              - "s3:PutBucketVersioning"
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${rS3VpcFlowlogsSharedBucket}"
          - Sid: "Allow"
            Effect: "Allow"
            Principal:
              AWS: !GetAtt rVpcFlowLogsAthenaIntegrationLambdaExecutorRole.Arn
            Action:
              - "s3:ListBucket"
              - "s3:GetObjectAcl"
              - "s3:GetObject"
              - "s3:GetObjectTagging"
              - "s3:GetBucketPolicy"
            Resource:
              - !Sub "arn:${AWS::Partition}:s3:::${rS3VpcFlowlogsSharedBucket}"
              - !Sub "arn:${AWS::Partition}:s3:::${rS3VpcFlowlogsSharedBucket}/*"
  rVpcFlowLogsAthenaIntegrationLambdaExecutorRole:
      Type: AWS::IAM::Role
      Properties:
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service: lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        Path: /
        Policies:
          - PolicyName: VPCFlowLogsAthenaIntegrationLambdaExecutorPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: "Allow"
                  Action:
                    - "s3:ListBucket"
                    - "logs:CreateLogGroup"
                  Resource:
                    - !Ref "pAthenaQueryResultBucketArn"
                    - !Sub "arn:${AWS::Partition}:s3:::${rS3VpcFlowlogsSharedBucket}"
                    - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:*"
                - Effect: Allow
                  Action:
                    - "s3:PutObject"
                    - "s3:GetBucketLocation"
                    - "s3:GetObject"
                    - "logs:CreateLogStream"
                    - "logs:PutLogEvents"
                  Resource:
                    - !Ref "pAthenaQueryResultBucketArn"
                    - !Sub "${pAthenaQueryResultBucketArn}/*"
                    - !Sub "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/vpc_logs_lambda_handler:*"
                - Effect: "Allow"
                  Action:
                    - "athena:GetQueryResults"
                    - "athena:StartQueryExecution"
                    - "athena:CreateNamedQuery"
                    - "athena:GetQueryExecution"
                  Resource:
                    - !Sub "arn:${AWS::Partition}:athena:*:${AWS::AccountId}:workgroup/primary"
                - Effect: "Allow"
                  Action:
                    - "glue:GetDatabase"
                    - "glue:GetTable"
                    - "glue:CreateTable"
                    - "glue:UpdateTable"
                    - "glue:BatchCreatePartition"
                    - "glue:CreatePartition"
                    - "glue:UpdatePartition"
                    - "glue:GetPartition"
                  Resource:
                    - !Sub "arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:catalog"
                    - !Sub "arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:database/vpcflowlogsathenadatabase"
                    - !Sub "arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:table/vpcflowlogsathenadatabase/vpc_flow_logs_custom_integration"
                    - !Sub "arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:table/vpcflowlogsathenadatabase/vpc_flow_logs_summary_view"
                    - !Sub "arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:table/vpcflowlogsathenadatabase/vpc_flow_logs_daily_view"
                    - !Sub "arn:${AWS::Partition}:glue:${AWS::Region}:${AWS::AccountId}:table/vpcflowlogsathenadatabase/vpc_flow_logs_enhanced_view"
                - Effect: Allow
                  Action:
                    - "s3:GetObjectAcl"
                    - "s3:GetObject"
                    - "s3:GetObjectTagging"
                    - "s3:GetBucketPolicy"
                  Resource:
                    - !Sub "arn:${AWS::Partition}:s3:::${rS3VpcFlowlogsSharedBucket}"
                    - !Sub "arn:${AWS::Partition}:s3:::${rS3VpcFlowlogsSharedBucket}/*"
        RoleName: LambdaExecutionRole-FlowLogsAthenaIntegration